--[[  
    Universal Anti-Detection Patch (2025)
    üî• –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –æ–±—Ö–æ–¥–æ–≤ –¥–ª—è —Å–∞–º–æ–ø–∏—Å–Ω—ã—Ö –∞–Ω—Ç–∏—á–∏—Ç–æ–≤ Roblox
    üö´ –ù–µ –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç Hyperion (Byfron), —Ç–æ–ª—å–∫–æ –æ—Ç Lua-–¥–µ—Ç–µ–∫—Ç–æ–≤ –≤ –∏–≥—Ä–∞—Ö
--]]

task.spawn(function()
    repeat task.wait() until game:IsLoaded()

    local RunService = cloneref(game:GetService("RunService"))
    local Stats = cloneref(game:GetService("Stats"))
    local CoreGui = cloneref(game:GetService("CoreGui"))

    --// === 1. –û–±—Ö–æ–¥ debug.traceback / debug.info
    local oldTrace; oldTrace = hookfunction(debug.traceback, function(...)
        if not checkcaller() then
            return "" -- –≤—Å–µ–≥–¥–∞ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
        end
        return oldTrace(...)
    end)

    local oldInfo; oldInfo = hookfunction(debug.info, function(...)
        if not checkcaller() then
            return nil -- –ª–æ–º–∞–µ–º –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏
        end
        return oldInfo(...)
    end)

    --// === 2. –ó–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä–æ–≤–µ—Ä–æ–∫ tostring/typeof
    local oldToString; oldToString = hookfunction(tostring, function(obj)
        if not checkcaller() then
            if type(obj) == "function" or type(obj) == "table" then
                return "function: 0x" .. string.format("%x", math.random(100000,999999))
            end
        end
        return oldToString(obj)
    end)

    local oldTypeof; oldTypeof = hookfunction(typeof, function(obj)
        if not checkcaller() then
            return type(obj)
        end
        return oldTypeof(obj)
    end)

    --// === 3. –ó–∞—â–∏—Ç–∞ –æ—Ç isexecutorclosure / iscclosure
    local oldExec; oldExec = hookfunction(getrenv().isexecutorclosure or getrenv().iscclosure, function(fn)
        if not checkcaller() then
            return false -- –≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ —ç—Ç–æ –æ–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è Roblox
        end
        return oldExec(fn)
    end)

    --// === 4. –°–∫—Ä—ã—Ç–∏–µ UI –æ—Ç FindFirstChild / GetDescendants
    local HiddenUIs = {} -- —Å—é–¥–∞ –¥–æ–±–∞–≤–ª—è–π —Å–≤–æ–∏ UI –æ–±—ä–µ–∫—Ç—ã

    local oldDesc; oldDesc = hookfunction(game.GetDescendants, function(self, ...)
        local results = oldDesc(self, ...)
        if not checkcaller() then
            for i,v in ipairs(HiddenUIs) do
                local idx = table.find(results, v)
                if idx then
                    table.remove(results, idx)
                end
            end
        end
        return results
    end)

    local oldFind; oldFind = hookfunction(game.FindFirstChild, function(self, name, recursive)
        local obj = oldFind(self, name, recursive)
        if not checkcaller() then
            if table.find(HiddenUIs, obj) then
                return nil
            end
        end
        return obj
    end)

    warn("[Bypass] –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ö–æ–¥—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã (traceback, tostring, isexecutorclosure, UI)")
end)
